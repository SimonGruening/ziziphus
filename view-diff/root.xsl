<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:vra="http://www.vraweb.org/vracore4.htm"
	xmlns:bfc="http://betterform.sourceforge.net/xforms/controls"
	xmlns:xf="http://www.w3.org/2002/xforms"
	xmlns:bfn="http://www.betterform.de/XSL/Functions"
	xmlns:diffs="http://betterform.de/ziziphus/diff"
	xpath-default-namespace="http://www.w3.org/2002/xforms"
	exclude-result-prefixes="bfn">
    <xsl:output method="xhtml" version="1.0" encoding="UTF-8" indent="yes" omit-xml-declaration="no"/>
    <xsl:strip-space elements="*"/>

    <!--<xsl:variable name="rootPath" select="'vraSets'"/>-->

    <!-- include transforms for sections in VRA dataset -->
    <xsl:include href="AgentSet.xsl"/>
    <xsl:include href="CulturalContextSet.xsl"/>
    <xsl:include href="DateSet.xsl"/>
    <xsl:include href="DescriptionSet.xsl"/>
    <xsl:include href="InscriptionSet.xsl"/>
    <xsl:include href="LocationSet.xsl"/>
    <xsl:include href="MaterialSet.xsl"/>
    <xsl:include href="MeasurementsSet.xsl"/>
    <xsl:include href="RelationSet.xsl"/>
    <xsl:include href="RightsSet.xsl"/>
    <xsl:include href="SourceSet.xsl"/>
    <xsl:include href="StateEditionSet.xsl"/>
    <xsl:include href="StylePeriodSet.xsl"/>
    <xsl:include href="SubjectSet.xsl"/>
    <xsl:include href="TechniqueSet.xsl"/>
    <xsl:include href="TextrefSet.xsl"/>
    <xsl:include href="TitleSet.xsl"/>
    <xsl:include href="WorktypeSet.xsl"/>
    <!-- 'work' or 'image' -->
    <xsl:param name="recordType" select="'GIVEN BY CALLER'"/>
    <!-- UUID of Record e.g w_****** -->
    <xsl:param name="recordId" select="'GIVEN BY CALLER'"/>
    <!--<xsl:variable name="root_id" select="if($type='work') then 'workrecord' else 'imagerecord'"/>-->
    <xsl:variable name="title" select="if($recordType='work') then 'Work Record' else 'Image Record'"/>
    <xsl:variable name="id_pref" select="if($recordType='work') then 'w_' else 'i_'"/>

    <!-- parameter is only used if a single section is rendered -->
    <xsl:param name="setname" select="''"/>

    <!-- top level - entry template - handles a work or an image record -->
<!--     <xsl:include href="vraSectionTemplate.xsl"/>
 -->

	<xsl:template match="/">
		<html>
			<head>
				<link rel="stylesheet" type="text/css" href="resources/css/bootstrap.min.css"/>
				<link rel="stylesheet" type="text/css" href="resources/css/layout.css" />
				<link rel="stylesheet" type="text/css" href="resources/css/record.css" />
				<link rel="stylesheet" type="text/css" href="resources/css/diffs.css" />
				<link rel="stylesheet" type="text/css" href="resources/script/mingos-uwindow/themes/ziziphus/style.css" />
				<link rel="stylesheet" type="text/css" href="resources/script/layout-default-latest.css" />
			</head>
			<body>
				<xsl:apply-templates />
			</body>
		</html>
	</xsl:template>
    
    <xsl:template name="titlePane">
        <xsl:param name="vraSetName"/>
        <xsl:param name="vraSetNode" as="node()?"/>
        <xsl:variable name="title" select="bfn:sectionTitle($vraSetName)"/>
        <xsl:variable name="id" select="concat($id_pref,$title)"/>
        <xsl:variable name="sectionWithData" select="if(string-length(string-join($vraSetNode//*/text(),'')) != 0) then 'true' else 'false'"/>
        <xsl:variable name="classes">
        	<xsl:choose>
        	<xsl:when test="$vraSetNode/@diffs:element-change">
        		<xsl:value-of select="concat('diffs-set-',$vraSetNode/@diffs:element-change, ' ')"/>
        	</xsl:when>
        	<xsl:otherwise>diffs-set-missing</xsl:otherwise>
        	</xsl:choose>
        </xsl:variable>
        <div id="{$id}" class="{$classes}">
            <xsl:variable name="mountPoint" select="concat($id,'_MountPoint')"/>
            <xsl:variable name="caseId" select="concat('c-',$id)"/>
            <xsl:variable name="tableId" select="concat('table-',$id)"/>
        	<h2><xsl:copy-of select="$title"/></h2>
			<div class="vraSection simple" id="{concat($id,'_HtmlContent')}">
				<!-- all markup within this div must be generated by the specific Subforms 
					stylesheets, e.q. AgentSet.xsl -->
				<xsl:choose>
					<xsl:when test="exists($vraSetNode/vra:display/text())">
						<xsl:apply-templates select="$vraSetNode/vra:display" />
					</xsl:when>
					<xsl:otherwise>
						<!-- drill down into single stylesheets (the ones include at top of this 
							file. -->
						<xsl:apply-templates select="$vraSetNode">
							<xsl:with-param name="vraTableId" select="$tableId" />
						</xsl:apply-templates>
					</xsl:otherwise>
				</xsl:choose>
				<xsl:apply-templates select="$vraSetNode/vra:notes" />
			</div>
        </div>
    </xsl:template>
    
   <xsl:template match="vra:work | vra:image">
      <xsl:variable name="side"
                    select="if(local-name(.)='work') then 'leftPanel' else 'rightPanel'"></xsl:variable>
      <div>
         <xsl:value-of select="$title"></xsl:value-of>
         <xsl:text>Â </xsl:text><button type="button" class="historyButton" id="{$recordType}-versions-button"
                 subject="{$recordId}"
                 title="Versions history for {$recordType} {$recordId}">H</button></div>
      <div id="{$side}" class="sidePanel">
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'AgentSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:agentSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'DateSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:dateSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'DescriptionSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:descriptionSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'LocationSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:locationSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'RightsSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:rightsSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'SubjectSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:subjectSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'TitleSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:titleSet"></xsl:with-param>
         </xsl:call-template>
         <hr/>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'CulturalContextSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:culturalContextSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'InscriptionSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:inscriptionSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'MaterialSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:materialSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'MeasurementsSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:measurementsSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'RelationSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:relationSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'SourceSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:sourceSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'StateEditionSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:stateEditionSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'StylePeriodSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:stylePeriodSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'TechniqueSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:techniqueSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'TextrefSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:textrefSet"></xsl:with-param>
         </xsl:call-template>
         <xsl:call-template name="titlePane">
            <xsl:with-param name="vraSetName" select="'WorktypeSet'"></xsl:with-param>
            <xsl:with-param name="vraSetNode" select="vra:worktypeSet"></xsl:with-param>
         </xsl:call-template>
      </div>
   </xsl:template>
   
    <xsl:template match="vra:display" priority="40">
        <xsl:if test="text()">
            <div class="display-container" property="{name()}">
                <xsl:value-of select="text()"/>
            </div>
        </xsl:if>
    </xsl:template>
    <xsl:template match="vra:notes" priority="40">
        <xsl:if test="text()">
            <div class="notes-container detail">
                <span class="notes" property="{name()}">
                    <xsl:value-of select="text()"/>
                </span>
            </div>
        </xsl:if>
    </xsl:template>
    
    <xsl:function name="bfn:sectionTitle" as="xsd:string?">
        <xsl:param name="arg" as="xsd:string?"/>
        <xsl:sequence select="substring-before(bfn:upperCase($arg),'Set')"/>
    </xsl:function>
    <xsl:function name="bfn:upperCase" as="xsd:string?">
        <xsl:param name="arg" as="xsd:string?"/>
        <xsl:sequence select="concat(upper-case(substring($arg,1,1)),substring($arg,2))"/>
    </xsl:function>
    
</xsl:stylesheet>